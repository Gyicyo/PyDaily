普通的 input == password 采用明文检验密码正确与否并不安全（容易受到定时攻击）

python的secrets模块提供了更安全的随机数（random的随机取决于时间，但secrets的随机还取决于环境因素）以及更安全的检查

第三方库cryptography提供了各种加密算法，其中包括hex256，这里模拟了加盐哈希加密操作



补充：
—— 定时攻击：在对用户输入的密码与服务器端实际密码进行比较时，不同的实现可能	会有微笑的时间差异。特别是如果密码比较是通过循环逐字符匹配完成的，匹配成	功所需循环次数将取决于密码长度和匹配程度。攻击者可以检测这些细微的时间差	来推测密码的某些部分，尤其是当服务器响应时间与比较操作紧密相关时，这种攻	击更加有效。

——加盐哈希：传统的哈希加密在加密相同密码时获取到的加密结果是相同的，可能会有密码碰撞风险，通过在密码前加入一段随机字符数列（这段数列称为盐（salt）），再进行hex加密，对于相同密码得到的结果也完全不同。（通常会保留盐值以进行密码检测）

