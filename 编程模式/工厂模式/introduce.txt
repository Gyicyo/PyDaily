工厂模式是一种设计模式，主要目标是通过一个公用的接口（通常为工厂类）来创建对象，从而实现对象的使用者与具体对象实现之间的解耦合。作用如下：

1、隐藏实现细节：工厂模式将对象的创建过程封装起来，客户端代码不再通过new关键词来实例化对象，而是调用工厂方法。这样，客户端代码不需要知道具体的实现类，只知道所需的对象类型。

2、可扩展性：当需要添加新的对象类型时，无需修改使用这些对象的客户端代码。只需要增加新的实现类和更新工厂逻辑，就可以支持新类型对象的创建。

3、依赖倒置原则：工厂模式遵循依赖倒置原则，即依赖于抽象而不是具体实现。客户端代码依赖于工厂接口，而不是某个具体的对象类。

4、松耦合：由于客户端不直接与对象的实现类交互，即使实现类发生变化，只需要工厂方法保持不变，客户端代码就不需要改动，提高了系统的灵活性和可维护性。